0=Installation EDM
0.steps=1,2,3,4,5,6,7,8
0.menu=1: Installing Askosi|2: Configuring Dspace and Askosi|3: Create Auth Items|4: Configure EDMExport|5: Configure EDMCrosswalk|6: Configure EDMCrosswalk with xsl|7: Fill skos:about items with values of authorities|8: Exit
0.error.commands=You must provide at least one command argument
0.error.fail.init=Failure during filter init: #?#
0.error.dspace.dir=The DSpace installation directory is no defined!!
0.error.tomcat.base=The Tomcat Base directory is no defined!!
0.shutdown.hook=MyShutdown hook called
0.dspace_dir.option=DSpace installation directory
0.help.option=Help
0.language.option=Language to use
0.terminal.option=Use lanterna library for display
0.step.option=Go to this installation step
0.tomcat_base.option=Tomcat Base directory
0.verbose.option=Verbosity
0.debug.option=Enable debug messages

0.step.fail=Step not ok.

0.proceed=Â¿Proceed ([y]/n)?
0.option.step=Choose step:

0.step.askosi=1
0.step.conf_dspace_askosi=2
0.step.auth_item=3
0.step.edmexport=4
0.step.edmcrosswalk=5
0.step.edmcrosswalkxsl=6
0.step.fillitems=7
0.step.exit=8

0.answer.yes=y

0.authentication=Dspace User authentication
0.email.user=Email of the dspace user:
0.password.user=Password of the dspace user:
0.invalid.user=User not valid.

0.findElementDC=Schema: #?# , element: #?# , qualifier: #?#

0.checkAllSkosAuthElements.searching.elements=Searching auth elements in #?# collections.
0.checkAllSkosAuthElements.searching.elements.collection=Searching auth elements in collection: #?# with handle #?#
0.checkAllSkosAuthElements.searching.elements.item=Searching auth elements in item: #?# with handle #?#

0.checkSkosAuthItem.elements=Elements: #?#
0.checkSkosAuthItem.element=Auth element: #?#


1=Beginning step 1: Installing Askosi
1.summary=Files will be checked on md5 hash and permissions from the installer packages dir\nJar files will be copied to servlet shared lib dir, they are required for Askosi\n\tE.g.: for Linux Debian: /var/lib/tomcat5.5/shared/lib/; for Linux RedHat: /usr/local/tomcat6/lib/; for OpenBSD: /var/tomcat/shared/lib/\nDatabase driver jar file will be copied from installer lib dir to servlet common lib dir.\n\tE.g.: for Linux Debian: /usr/share/tomcat5.5/common/lib/; for Linux RedHat: /usr/local/tomcat6/lib/; for OpenBSD: /var/tomcat/shared/lib/\naskosiWebapp.zip file will be extracted and copied from packages dir to servlet webapps dir.\nClasses from file classes.zip will be extracted and copied from packages dir to the dir where jspui is deployed, to install askosi plugin.\nFiles will be extracted and copied from exampleAskosiData.zip file from packages dir to Askosi data dir.

1.ok=Askosi installed ok. Tomcat must be restarted and this installer thereafter.
1.fail=Failed to complete step 1.

1.checkPackages.file=File #?#
1.checkPackages.file.notreadable=#?# file is not readable
1.checkPackages.file.md5=Md5 file #?#
1.checkPackages.file.md5.nok=Md5 didn't match in file: #?#
1.checkPackages.file.ok=File ok
1.checkPackages.directory.notaccessible=#?# directory is not accessible

1.installPackages.title=Beginning copy of jar's needed by Askosi
1.installPackages.jarok=Jar files copied ok
1.installPackages.db.title=Beginning copy of database driver
1.installPackages.deploy.title=Beginning deploy of Askosi Web App\n(it's convenient to deploy at Tomcat webapps dir to don't modify server.xml to add a new context)
1.installPackages.deploy.plugin.title=Beginning deploy of Askosi Plugin for Jspui
1.installPackages.datadir.title=Beginning creation of Askosi data directory

1.copyJarsShared.tomcatbasedir.notexist=#?# Tomcat base dir does not exist or is not readable
1.copyJarsShared.tomcatbaseshareddir.notwritable=#?# Directory is not writable
1.copyJarsShared.dir.notwritable=#?# Directory does not exist or is not writable
1.copyJarsShared.dir.copyjars=The jar files needed by Askosi are going to be copied to or give new path: #?# (Press intro to continue)
1.copyJarsShared.dirnew.copyjars=The jar files needed by Askosi are going to be copied to new path:

1.copyPackageFile.fileexists=#?# File already exists. Do you want to overwrite it (y/[n])?
1.copyPackageFile.copyfile=#?# Copied to #?#
1.copyPackageFile.orverwritingfile=Overwriting file
1.copyDatabaseDrivers.dir.copyjars=The database jar files needed by Askosi are going to be copied to or give new path: #?# (Press intro to continue)
1.copyDatabaseDrivers.dirnew.copyjars=The database jar files needed by Askosi are going to be copied to new path:
1.copyDatabaseDrivers.copy.fail=Copy failed #?#
1.copyDatabaseDrivers.copy.ok=Database Jar files copied ok
1.copyDatabaseDrivers.dir.nojar=#?# Directory doesn't have any jdbc driver
1.copyDatabaseDrivers.dir.noread=#?# Directory doesn't exist or is not readable

1.copyAskosiWebApp.askosiwebappdestdir.notexist=#?# Tomcat webapps dir does not exist or is not readable
1.copyAskosiWebApp.askosiwebappdestdir=Path to copy the extracted files needed from askosiWebapp.zip:
1.copyAskosiWebApp.askosiwebappdestdir.new=The extracted files needed from askosiWebapp.zip are going to be copied to or give new path:
1.copyAskosiWebApp.ok=Askosi Web App extracted and copied ok
1.copyAskosiWebApp.fail=Askosi Web App extracted and copied failed
1.copyAskosiWebApp.nowebxml=File #?# does not exist or is not writable to add the Askosi data dir path

1.changeWebXml.noSKOSdirectory=There is no context param "SKOSdirectory" in file #?#

1.copyAskosiPlugJspui.dir=Directory where Jspui is deployed (e.g.: #?#/webapps/jspui): (Press intro to continue)
1.copyAskosiPlugJspui.ok=Askosi Plugin for Jspui extracted and copied ok
1.copyAskosiPlugJspui.fail=Askosi Plugin for Jspui extracted and copied with fails

1.copyAskosiDataDir=Directory of Askosi data:
1.copyAskosiDataDir.ok=Creation of Askosi data directory ok
1.copyAskosiDataDir.notexist=#?# Directory does not exist, do you want to create it ([y]/n)?
1.copyAskosiDataDir.failcreate=Unable to create data directory: #?#
1.copyAskosiDataDir.fail=Creation of Askosi data directory failed

1.copyPackageZipFile.failcreate=Unable to create contents directory: #?#
1.copyPackageZipFile.extract=Extracting file: #?#
1.copyPackageZipFile.failcreate.dir=Unable to create directory: #?#


2=Beginning step 2: Configuring Dspace and Askosi
2.summary=Askosi must be installed (step 1) before run this one.\nDspace configuration file "dspace.cfg" will be copied to the installer work dir: work.\nAll auth items and collections will be stored in memory to process them.\nNew elements will be able to be added if requested.\nFile "dspace.cfg" will be modified to add askosi plugin and its data dir.\nFor every unique auth element, file "dspace.cfg" will be modified to add a new vocabulary.\nFile "input-forms.xml" will be copied to the work dir.\nFor every collection a new form with its auth element will be created to link them to their corresponding vocabulary.\nNon auth collections and their corresponding forms will be asked to be modified to add the vocabulary.\nFor every vocabulary two new files will be created int the askosi data dir. These files will contain the database conex config and the sql query to the auth collection with the auth element.

2.configureAll.notauthdcelements=Not configuring input-forms.xml and askosi data dir because there are not auth dc elements.
2.configureAll.inputforms.notexist=#?# not exist or is not readable.
2.configureAll.dspacedirconf.notexist=There is not exist #?# or is not readable, or the current directory #?# is not writable.
2.configureAll.AskosiDataDir.notexist=Askosi Data dir does not exist or is no writeable: #?#
2.configureAll.ok=Configuring Dspace and Askosi finished successfully. Remember to copy the files on work to dspace environment:\n dspace.cfg to the dspace config dir\n input-forms.xml to the dspace config dir.
2.configureAll.restart="dspace.cfg" file has been modified in the work directory #?#.\nYou must copy it to the dspace config directory.\nYou must restart  the servlet (e.g. Tomcat) and this installer thereafter

2.addAuthDCElements=DC elements as authorities (a:list all authorities / l: list all dc elements / n: enter new authority / x: exit and continue)
2.addAuthDCElements.listauth=List all Authorities
2.addAuthDCElements.listdc=List all DC elements
2.addAuthDCElements.notauthdcelements=There are not auth dc elements. You must enter a new authority.

2.addAuthDCElement=DC Element (type x to go former menu):
2.addAuthDCElement.element.notexist=#?# Element does not exist.

2.configureInputFormsDspace.notauth=There are not auth elements created in the database and owned by a collection\n so the input-forms.xml file will not be modified. Go to step 3.

2.configureInputFormsDspace.inputforms.add=Creating new input-forms.xml in #?# to add the authorities.\nWhen you have checked the file, replace #?# with this new one.
2.configureInputFormsDspace.inputforms.file.exists=#?# File exists. Replace it ([y]/n)?

2.readInputFormsDspace.element.page=Which page the element "#?#" at form "#?#" must go to in the input-forms?
2.readInputFormsDspace.element.form=Which collections the element "#?#" for vocabulary "#?#" must go to in the input-forms (input handles or/and default for all separated by commas)?

2.updateElementvocabulary=Change current vocabulary "#?#" for element "#?#" at form "#?#" for new vocabulary "#?#" (y/[n])?

2.addFieldForm.label=Label for element: #?#
2.addFieldForm.hint=Hint for element: #?#

2.configureDspaceCfg.dspacecfg.add=Creating new configuration dspace.cfg in #?# to add the authorities.\nWhen you have checked the file, replace #?# with this new one.
2.configureDspaceCfg.dspacecfg.file.exists=#?# File exists. Replace it ([y]/n)?
2.configureDspaceCfg.askosidatadir=Askosi data directory: #?#
2.configureDspaceCfg.element.incorrect=#?# Element is not properly configured. The correct one is going to be added. Please remove the incorrect one.
2.configureDspaceCfg.element.add.fail=#?# Element failed to be added.
2.configureDspaceCfg.element.add=#?# Element added.
2.configureDspaceCfg.nothing.add= No auth elements added to dspace.cfg.

2.readDspaceCfg.line.found.data=Found line: #?# with data dir #?#
2.readDspaceCfg.line.found.content=Found line: #?# with content #?#
2.readDspaceCfg.line.found=Found line: #?#
2.readDspaceCfg.line.found.element=Found line: #?# with element #?#

2.processAskosiVocabularies.create=Creating askosi configuration file "#?#" for vocabulary "#?#"


3=Beginning step 3: Create Auth Items
3.summary=As surely on this step, communities, collections and items will be created in dspace for the auth elements, an authentication with a dspace user is required.\nDc elements will be able to be selected to create sets of auth elements in dspace.\nCommunity and collection will be created/linked to these auth elements.\nNon auth collections will be traversed to look for unique values and added to auth items in their collections.\nAuth items will be created with type SKOS_AUTH.

3.fail=Failed to complete step 3.

3.createAuth.noadmin=User #?# is not admin
3.createAuth.notschema=There is not schema #?#
3.createAuth.numelements=Number elements in schema #?#:  #?#
3.createAuth.menu=DC elements as authorities collections (a:list all authorities / l: list all dc elements / n: enter new authority / x: exit)
3.createAuth.listauth=List all Authorities
3.createAuth.listdc=List all DC elements
3.createAuth.notmetadata=There are not metatata elements
3.createAuth.notauthdcelements=There are not auth dc elements. You must enter a new authority.

3.createElementAuth.dc.element=DC Element (type x to go former menu):
3.createElementAuth.handle.community=Handle community or empty to create new:
3.createElementAuth.handle.collection=Handle collection or empty to create new:
3.createElementAuth.element.nonauthcontrolled="#?#" element is not authority controlled in dspace.cfg. Go to step 2.
3.createElementAuth.element.notexist=#?# Element does not exist.
3.createElementAuth.create=Now Items will be created in this community #?# and collection #?# from the Items of not authorites collections.\nItems will be created with type SKOS_AUTH. Proceed ([y]/n)?

3.fillAuthItems.getitems=Getting items from collection: #?#
3.fillAuthItems.additem=Adding item with value: #?#
3.fillAuthItems.canceladd=Exists an authority with this value. Cancelling add operation.
3.fillAuthItems.addmetadata=Adding metadata #?# , language: #?# , value: #?#, authority: #?#
3.fillAuthItems.item.mismatch=Item #?# with handle #?# mismatch #?#
3.fillAuthItems.collection.item.noelement=Collection #?# item #?# has not element #?# , language: #?#
3.fillAuthItems.numItemsModified=Number of modified/added items for the element #?#: #?#

3.askCommunity.handle=Handle of parent community or empty:
3.askCommunity.name=Community name:
3.askCommunity.notexist=#?# Handle does not exist or is not a community.

3.askCollection.handle=Handle of collection or empty:
3.askCollection.name=Collection name:
3.askCollection.notexist=#?# Handle does not exist or is not a collection.


4=Beginning step 4: Configuring EDMExport with your dspace.cfg
4.summary=File "EDMExport.war" will be copied from packages dir to the work dir.\nDspace config file path will be asked.\nFile "EDMExport.war" will be modified because inside file "WEB-INF/web.xml" will be modified to change a parameter to add the new path to "dspace.cfg".

4.checkEDMExporWar.notexists=#?# war file does not exist is not a file or is not writeable
4.checkEDMExporWar.newwar=Introduce new war file or intro fo finish.

4.configure.edmexport.add=Creating new EDMExport.war in #?#.
4.configure.edmexport.file.exists=#?# File exists. Replace it ([y]/n)?
4.configure.notwebxml=There is not exist the file "WEB-INF/web.xml" inside the war file
4.configure.nopath=There is no <param-name>dspace-config</param-name> element
4.configure.dspacecfg=Dspace configuration file "#?#" or enter a new one:
4.configure.dspacecfg.ok=Configuring EDMExport finished successfully. Remember to copy the file "#?#" to deploy it in you server.
4.configure.dspacecfg.nok=Error configuring EDMExport


5=Beginning step 5: Configuring EDMCrosswalk with your oaicat.properties and dspace-oai-api jar
5.summary=File "EDMCrosswalk.java" will be copied from packages dir to the work dir.\nDspace oai api jar file will be copied from the dir where is deployed or the path will be asked to the work dir.\nValues will be asked for edm specific elements as edm.rights and edm.types.\nFile "EDMCrosswalk,java" will be modified with these new values.\nThis file will be compiled and added to the dspace oai api jar file.\nFile "oaicat.properties" will be copied from dspace config file to the work dir and a property will be added for edm and EDMCrosswalk.

5.checkEdmCrowssWalk.notexists=#?# class file does not exist is not a file or is not writeable
5.checkEdmCrowssWalk.newclass=Introduce new class file or intro fo finish.

5.checkOaiApiJar.notexists=#?# jar file does not exist is not a file or is not writeable
5.checkOaiApiJar.newjar=Introduce new jar file or intro fo finish.

5.configure.edmcrosswalk.oaiapijar.add=Creating new oai api jar in #?#.\nWhen you have checked the file, replace #?# with this new one.
5.configure.edmcrosswalk.oaiapijar.file.exists=#?# File exists. Replace it ([y]/n)?
5.configure.exists.class=There is already a "#?#" in the "#?#" jar file. Continue (y/[n])?
5.configure.edmcrosswalk.conf.begin=Beginning the configuration of the "#?#" to customize some parameters
5.configure.edmcrosswalk.conf.edmrights=Url for the element edm.rights:
5.configure.edmcrosswalk.conf.edmrights.new=There is a value for edm.rights: "#?#", replace it with "#?#" (y/[n])?
5.configure.edmcrosswalk.conf.edmtypes.exist=Actually exist the next types configured with their values (these ones will be look for when visualized and they'll be replaced by the type):
5.configure.edmcrosswalk.conf.edmtypes.type:Type #?#:
5.configure.edmcrosswalk.conf.edmtypes.type.update=Which type do you want to change (press intro to finish)?
5.configure.edmcrosswalk.conf.edmtypes.type.value.update=Values for types "#?#" separated by commas, actually: #?#
5.configure.edmcrosswalk.conf.compile=Compiling the new class
5.configure.edmcrosswalk.conf.updatejar=Updating jar file "#?#" with the new class
5.configure.edmcrosswalk.oaicat.add=Creating new oaicat.properties in #?#.\nWhen you have checked the file, replace #?# with this new one.
5.configure.edmcrosswalk.oaicat.file.exists=#?# File exists. Replace it ([y]/n)?
5.configure.edmcrosswalk.conf.oaicat=Oai file properties to copy to work dir to add EDMCrosswalk, "#?#" or give another one:
5.configure.edmcrosswalk.conf.ok=Configuring EDMCrosswalk finished successfully. Remember to copy the files on work to dspace environment:\n oaicat.properties to the dspace config dir\n #?# to the WEB-INF/lib dir of the oai deployed module.
5.configure.edmcrosswalk.conf.nok=Error configuring EDMCrosswalk
5.confOaiCatProperties.exist=File "oaicat.properties" already has a property "Crosswalks.edm" with value: #?#. Our value must be: #?#


6=Beginning step 6: Configure EDMCrosswalk with xsl
6.summary=File "dspace.cfg" will be copied from dspace config file to the work dir.\nFile "DIM2EDM.xsl" will be copied from pachages dir to the work dir.\nFile "oaicat.properties" will be copied from dspace config dir to the work dir.\nFile DIM2EDM.xsl wil be configures asking for values for some edm elements.\nFile "dspace.cfg" will be modified to add the dissemination crosswalk.\nFile "oaicat.properties" will be modified to add the edm crosswalk.

6.configure.dspacecfg.add=Creating dspace.cfg in #?#.\nWhen you have checked the file, replace #?# with this new one.
6.configure.dspacecfg.file.exists=#?# File exists. Replace it ([y]/n)?
6.configure.dim2edm.add=Creating DIM2EDM.xsl in #?#.\nWhen you have checked the file, replace #?# with this new one.
6.configure.dim2edm.file.exists=#?# File exists. Replace it ([y]/n)?
6.configure.oaicat.add=Creating oaicat.properties in #?#.\nWhen you have checked the file, replace #?# with this new one.
6.configure.oaicat.file.exists=#?# File exists. Replace it ([y]/n)?
6.configure.dspacedirconf.notexist=Files "#?#" "#?#" do not exist or are not readable or dir #?# is not writable.
6.configure.ok=Configuring EDMCrosswalk with xsl finished successfully.\nRemember to copy the files on work to dspace environment:\ndspace.cfg and oaicat.properties files to the dspace config dir\nDIM2EDM.xsl file to crosswalks dspace config dir

6.checkOldOaiProperties.crosswalk.xsl.exist=There is already an xsl edm crosswalk configured in #?#
6.checkOldOaiProperties.crosswalk.java.exist=There is already an java edm crosswalk configured in #?#
6.checkOldOaiProperties.crosswalk.unknown.exist=There is already an edm crosswalk configured in #?#

6.checkOldEDMCrosswalk.crosswalk.xsl.exist=There is already an xsl edm crosswalk configured in #?# with stylesheet #?#

6.configureDim2EdmXslVariableHandle=Write the current uri that dspace build the handles with, now: #?#
6.configureDim2EdmXslVariableIdentUriOrig=Write the uri that you want to build the handles with, now: #?#
6.configureDim2EdmXslAggregationDataProvider=Write the data provider (edm:dataProvider element from ore:Aggregation), now: #?#
6.configureDim2EdmXslAggregationProvider=Write the provider (edm:provider element from ore:Aggregation), now: #?#
6.configureDim2EdmXslRights=Write the uri for the rights licence (edm:rights element from ore:Aggregation), now: #?#
6.configureDim2EdmXslProviderCHOType=Write the item types (edm:type element from edm:ProvidedCHO), now: #?#
6.configureDim2EdmXslProviderCHOLanguage=Write language (edm:language element from edm:ProvidedCHO), now: #?#


7=Beginning step 7: Fill skos:about items with values of authorities.
7.summary=The collections with authority items will be traversed to get the dc elements.\nThe collections with non authority items will be traversed to get the dc elements linked with the ones from the authorites.\nIf there is a match the authority handle will be stored in the authority field of the table metadatavalue of the database for the non auth item.

7.configure.auth.num=Number of auth elements: #?#
7.configure.checkAllSkosAuthElements=Getting the DC elements related to authorities
7.configure.traverseNonauthItems=Traversing items to assign authorities to the DC elements matching an authority
7.configure.numItemsModified=Number of modified items: #?#

7.traverseNonauthItems.nopermission=User #?# has not admin permissions for item with handle #?#
7.traverseNonauthItems.collection=Collection #?# with handle #?#
7.traverseNonauthItems.item=Item #?# with handle #?#
7.traverseNonauthItems.changeitem=Item with handle #?# modified with authority #?#
7.traverseNonauthItems.searchNonAuthItems=Searching authority with dc element #?# and value #?#

7.showMenuDCElements=Menu to select Auth DC elements
7.showMenuDCElements.menu=l: list DC elements|a: use all DC elements|x: exit|write DC elements separated by commas
7.showMenuDCElements.listdc=List of Auth DC Elements
7.showMenuDCElements.dcelement.notexist=Element #?# does not exist

7.showMenuCollections=Menu to select collections of non auth items
7.showMenuCollections.menu=a: use all the collections|x: exit|write the collections handles\
  separated by commas
7.showMenuCollections.collection.notexist=Collection with handle #?# does not exist
