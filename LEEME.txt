INSTALADOR DE ASKOSI, DE EDMEXPORT Y DE EDMCROSSWALK PARA DSPACE
----------------------------------------------------------------

Este instalador está programado en Java y por lo tanto necesita de
una máquina virtual Java para ser lanzado. Está pensado para las versiones
1.6 de Oracle o de OpenJdk, en versiones inferiores o superiores no está probado.

No tiene componente gui porque está pensado para lanzarse desde consola o terminal,
ya que muchos servidores no tienen instalado servidor gráfico (Linux/Unix) para ahorrar
recursos necesarios para lo importante. Sólo poseen acceso remoto por ssh u otro método.
Así que no espere un entorno bonito, sólo operativo.

El instalador se ha probado con el servidor de aplicaciones Tomcat 5.5 y Tomcat 6.

Como el instalador instala librerías jar en el directorio de librerías del servlet,
se ha de lanzar con un usuario que tenga permisos de escritura.

El instalador necesita que esté instalado dspace con los siguientes módulos: jspui y oai.
Se ha probado con dspace 1.7 y 1.8.


El instalador viene con dos directorios:

packages: están los archivos que usará el instalador para descomprimir, copiar y/o
    modificar. La lista es la siguiente:

    ASKOSI.jar ............................... Librería de Askosi necesaria.
    askosiWebapp.zip ......................... Comprimido con las clases de la aplicación web de Askosi a desplegar
                                               en el directorio webapps del servlet o uno a configurar.
    classes.zip .............................. Comprimido con las clases a copiar en el directorio de clases donde
                                               esté deplegado el módulo de jspui.
    commons-dbcp.jar ......................... Librería necesaria para Askosi.
    commons-pool.jar ......................... Librería necesaria para Askosi.
    DIM2EDM.xsl .............................. Plantilla xsl para el PluginCrosswalk de EDM
    dspace-api-1.7.2.jar ..................... Librería de dspace necesaria para el instalador. Se ha elegido la
                                               versión 1.7.2 por ser una intermedia, ni muy nueva ni obsoleta.
    EDMCrosswalk.java ........................ Archivo fuente java para ser compilado por el instalador y añadirlo
                                               a la librería jar del api de oai de dspace.
    EDMExport.war ............................ Archivo war para modificarse por el instalador y desplegarse manualmente
                                               en el directorio webapps del servlet o donde se quiera.
    exampleAskosiData.zip .................... Archivo comprimido necesario para Askosi que procesará el instalador
                                               para crear el directorio de datos de Askosi.
    jaxb-xalan-1.5.jar ....................... Librería necesaria para Askosi.
    jdom-1.0.jar ............................. Librería necesaria para Askosi y el instalador.
    jsr311-api-1.1.1.jar ..................... Librería necesaria para Askosi.
    jstl-1.2.jar ............................. Librería necesaria para Askosi.
    log4j.jar ................................ Librería necesaria para Askosi.
    oaicat-1.5.48.jar ........................ Librería necesaria para Askosi y el instalador.
    openrdf-alibaba-2.0-beta6.jar ............ Librería necesaria para Askosi.
    openrdf-sesame-2.3.2-onejar.jar .......... Librería necesaria para Askosi.


lib: están archivos de librerías necesarios para el instalador. La lista es la siguiente:

    commons-cli-1.2.jar ...................... Librería necesaria para el instalador.
    commons-codec-1.7.jar .................... Librería necesaria para el instalador.
    commons-io-2.4.jar ....................... Librería necesaria para el instalador.
    lanterna-2.1.1.jar ....................... Librería necesaria para el instalador.
    normalizer.jar ........................... Librería necesaria para el instalador.
    ojdbc14-10.2.0.2.0.jar ................... Librería necesaria para el instalador.
    postgresql-8.1-408.jdbc3.jar ............. Librería necesaria para el instalador.


Hay dos scripts que permiten lanzar el instalador con las rutas a las librerías necesarias bien configuradas además
de realizar comprobaciones pertinentes. Se ha intentado que los scripts realicen lo mismo.

Para Linux/Unix: install.sh
Para Windows: install.bat

La forma de lanzar el instalador es la siguiente:

Linux/Unix:

$ ./install.sh -d directorio_dspace_desplegado -t directorio_fisico_base_tomcat_u_otro_servlet -v -s 0 -l es_ES

Para ver la ayuda:
$ ./install.sh -h


Windows:

unidad:\ruta_al_instalador\install.bat -d directorio_dspace_desplegado -t directorio_fisico_base_tomcat_u_otro_servlet -v -s 0 -l es_ES

Para ver la ayuda:
$ ./install.bat -h

Saldría: Use: install.sh: [-d dir_space_runtime] [-h] [-l language] [-s step] [-t dir_tomcat_base] [-v] [-g]


Las opciones son las siguientes:

-d: ruta del directorio raíz donde está desplegado dspace.
-j: ruta del ejecutable java.
-t: ruta del directorio raíz de Tomcat.
-s: paso al que queremos ir. Mejor poner 0 para que nos salga el menú principal.
-v: que sea verboso y nos diga más cosas.
-g: mostrar mensajes de debug.
-l: idioma de los mensajes. Si se deja en blanco se coge el que tenga el sistema.
    Actualmente seporta inglés y español. Para español explícitamente poner: es_ES.
    Para inglés: en.


Por último está el archivo jar del instalador InstallerEDM.jar, que ha de poseer permisos de ejecución. Se podría lanzar
manualmente, pero sería algo como (los directorios son ficticios):

$ java -cp ./lib/commons-cli-1.2.jar:./lib/commons-codec-1.7.jar:./lib/commons-io-2.4.jar:./lib/lanterna-2.1.1.jar:./lib/normalizer.jar:./lib/postgresql-8.1-408.jdbc3.jar:/home/europeana/runtime//lib/activation-1.1.jar:/home/europeana/runtime//lib/ant-1.7.0.jar:/home/europeana/runtime//lib/ant-launcher-1.7.0.jar:.. muchas más librerías ..:InstallerEDM.jar:.:/home/europeana/runtime/config org.dspace.installer_edm.InstallerEDM -t /usr/share/tomcat5.5 -s 0  -v -l es_ES

lo que evidentemente es impráctico, por eso mejor lanzarlo con los scripts.
Las opciones del jar son las mismas que la de los scripts.


Como el instalador modifica la base de datos relacional de Dspace para crear comunidades, colecciones e ítems,
sería conveniente realizar una copia de ella para tener la seguridad de poderrealizar una regresión correcta.
Es necesario poseer un usuario en Dspace con permisos de creación de los comunidades, colecciones e ítems para
poder crear los ítems de las autoridades.
Cuando se termine, si se quiere que las comunidades, colecciones e ítems de las autoridades aparezcan en el
buscador de Dspace, se tendrá que reindexar Solr.

Con la aplicación Askosi se logra que cuando cataloga se pueda asociar al valor de un elemento dc de su nuevo ítem, el
handle del ítem autoridad que tiene el mismo nombre, cualificador y valor. Este handle se guarda en el campo authority
de la tabla metadatavalue de la base de datos relacional.
El EDMExport y el EDMCrosswalk para generar la clase de SKOS en el esquema EDM comprueba si el campo authority del ítems
tiene un valor, si es una url válida la muestra tal cual, si es un handle comprueba que exista en nuestra base de datos
y construye la url final del concepto skos con la url base de dspace y el handle.

El instalador consta de los siguientes pasos:


1: Instalar Askosi
2: Configurar Dspace: archivo dspace.cfg
3: Crear Items de Autoridad
4: Configurar Dspace: input-forms.xml y askosi
5: Configurar EDMExport
6: Configurar EDMCrosswalk
7: Configurar EDMCrosswalk mediante xsl
8: Rellenar skos:about de ítems con valores de autoridades
9: Salir



El primer paso instala la aplicación Askosi en el servidor. Todos los archivos necesarios los coge del directorio
packages del instalador.
Sería necesario reiniciar el Tomcat o Dspace al realizar este paso y luego el instalador.


El segundo paso copia el fichero de configuración de Dspace "dspace.cfg"
a un directorio llamado work en el directorio donde está el instalador.
Se preguntará si se quieren añadir más elementos como autoridad en dspace.cfg.
Lo modifica con las directivas o propiedades nuevas y los deja ahí para revisión del administrador.
Éste es el que manualmente (como medida de seguridad) tendrá que llevarlos a Dspace.
Sería necesario reiniciar el Tomcat o Dspace al realizar este paso y luego el instalador.


El tercer paso crea las comunidades, colecciones e ítems de las autoridades y las llena de valores buscando en las
colecciones de ítems que no son de autoridades.
Hay que validarse con un usuario de Dspace com permisos.
Para cada elemento DC que se quiere que sea una autoridad se asocia a una comunidad y colección de autoridades. Si no
existen éstas se crean.
Estos elementos han de estar configurados en el archivo de configuración de dspace "dspace.cfg" y estar controlados
por autoridades.
Esos elementos se buscan en el resto de colecciones de no autoridades para identificar valores únicos y asignarlos al
ítem de la colección de la autoridad.
No sería necesario reiniciar el Tomcat o Dspace.


El cuarto paso copia el fichero de catalogación "input-forms.xml"
a un directorio llamado work en el directorio donde está el instalador.
Lo modifica con las directivas o propiedades nuevas y los deja ahí para revisión del administrador.
Éste es el que manualmente (como medida de seguridad) tendrá que llevarlos a Dspace.
Sería necesario reiniciar el Tomcat o Dspace al realizar este paso y luego el instalador.


El quinto paso copia el archivo EDMExport.war de packages a work y lo modifica para configurarlo con la ruta al archivo
"dspace.cfg" del dspace desplegado.
Este war se tendría que copiar manualmente luego al directorio webapps de nuestro Tomcat o a otro sitio que queramos para desplegarlo.
Sería necesario reiniciar el Tomcat si no está configurado para desplegar de forma automática y luego el instalador.


El sexto paso copia el archivo EDMCrosswalk.java de packages a work y el jar de la api de oai de dspace a work.
Se piden datos para parámetros exclusivos de EDM y se modifica el java:
Se pide una url para el elemento edm.rights.
Se piden términos para el elemento edm.types para que cuando se cree el esquema oai con los datos del ítem, sean buscados
y si coinciden sean reemplazados por el tipo asociado a ellos.
Se compila y se agrega el archivo compilado al archivo jar.
Éste jar se ha de copiar manualmente al directorio de librerías donde está desplegado el módulo de oai de dspace.
También se copia el archivo oaicat.properties de dspace a work para añadirle el nuevo crosswalk.
Se tendría que copiar manualmente luego a dspace.
Sería necesario reiniciar el Tomcat o Dspace al realizar este paso y luego el instalador.
Este paso es incompatible con el de Configurar EDMCrosswalk mediante xsl.


El séptimo paso copia el archivo de configuración de dspace "dspace.cfg" al directorio de trabajo.
Se copiará el archivo DIM2EDM.xsl al directorio de trabajo.
Se copiará el archivo "oaicat.properties" desde el directorio de configuración de dspace al directorio de trabajo.
Se configurará el archivo DIM2EDM.xsl pidiendo valores para elementos de edm específicos:
Se pide la url base con la que se forman los handle, por defecto: http://hdl.handle.net/
Se pide la url base con la que se confeccionarán los handles, por ejemplo: http://example.com/bitstream/handle/
Se pide el valor para los elementos edm:dataProvider, edm:provider, edm:language
Se pide la url para el elemento edm:rights
Se piden los valores para el elemento edm:type, los permitidos son: TEXT, VIDEO, IMAGE, SOUND, 3D
Se modificará el archivo dspace.cfg del directorio de trabajo para aceptar este crosswalk de diseminación.
Se modificará el archivo del directorio de trabajo oaicat.properties para añadir el edmcrosswalk.
Los archivos dspace.cfg y oaicat.properties se tendrán que copiar manualmente luego a dspace.
El archivo DIM2EDM.xsl se tendrá que copiar manualmente al directorio crosswalk de dspace.
Sería necesario reiniciar el Tomcat o Dspace al realizar este paso y luego el instalador.
Este paso es incompatible con el de Configurar EDMCrosswalk.


El octavo paso se recorrerá todas las colecciones con ítems que son autoridades para recoger los elementos dc asociados.
Se recorrerá todas las colecciones con ítems que no son autoridades para recoger los elementos dc que se corresponden con
los recogidos de las autoridades.
Si hay una coincidencia se almacenará el handle de la autoridad en el campo authority de la tabla metadatavalue de la
bbdd para el element dc del ítem normal.
No sería necesario reiniciar el Tomcat o Dspace.


A medida que se vayan descubriendo errores o se tenga que adaptar a nuevas versiones de Dspace se irán sacando
parches o nuevas versiones.



